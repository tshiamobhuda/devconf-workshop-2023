name: Full Deployment
on:
  workflow_dispatch:
    inputs:
      lambda_function_name:
        required: true
        type: string
env:
  aws_region: af-south-1
jobs:
  terraform_deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.aws_region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Generate State File Name
        run: |
          random_string=$(openssl rand -base64 12 | tr --delete '/')
          state_file_name="devconf-${random_string}"
          echo "State File Name: $state_file_name.tfstate"
          echo "STATEFILENAME=$state_file_name" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Create and populate terraform.tfvars file
        run: |
          rm -fr terraform.tfvars
          touch terraform.tfvars
          echo 'function_name = "${{ inputs.lambda_function_name }}"' >> terraform.tfvars
          echo "" >> terraform.tfvars
          cat terraform.tfvars
        shell: bash

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_CLI_ARGS_init: "-backend-config='key=${{ env.STATEFILENAME }}.tfstate'"
  
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Outputs
        id: lambda_output
        run: |
          lambda_name=$(terraform output -raw lambda_name)
          echo "Lambda Name: $lambda_name"
          echo "lambda_function_name=$lambda_name" >> $GITHUB_OUTPUT
    outputs:
      lambda_function_name: ${{ steps.lambda_output.outputs.lambda_function_name }}
  python_tests:
    needs: [terraform_deployment]
    uses: ./.github/workflows/test_python.yml
    secrets: inherit
  python_deployment:
    needs: [python_tests, terraform_deployment]
    uses: ./.github/workflows/package_python.yml
    secrets: inherit
    with:
      lambda_function_name: ${{ needs.terraform_deployment.outputs.lambda_function_name }}